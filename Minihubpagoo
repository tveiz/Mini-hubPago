-- CONFIGURAÇÕES
local keys = {
    ["p7x9c"] = "2025-05-29", ["l2v5m"] = "2025-05-26", ["d6n3q"] = "2025-05-07",
    ["a0r8y"] = "2025-04-27", ["b3k7z"] = "2025-04-27", ["f8w2s"] = "2025-04-27",
    ["m1d9e"] = "2025-04-27", ["h7p5u"] = "2025-04-27", ["t2g4c"] = "2025-04-27",
    ["v9x1n"] = "2025-04-27", ["q6a3l"] = "2025-04-27", ["x0f8r"] = "2025-04-27",
    ["e5z7b"] = "2025-04-27", ["n3m6d"] = "2025-04-27", ["w8k2y"] = "2025-04-27",
    ["j1r9p"] = "2025-04-27", ["y4g2u"] = "2025-04-27", ["c7x0t"] = "2025-04-27",
    ["l5m1v"] = "2025-04-27", ["f2z9a"] = "2025-04-27", ["d8q6s"] = "2025-04-27",
    ["g3k1o"] = "2025-04-27", ["s7u9e"] = "2025-04-27", ["v0n5i"] = "2025-04-27",
    ["DONOsKeY"] = "2030-04-27", ["STAFFSkey"] = "2025-05-29",
    ["KEY321"] = "2025-04-27", ["KEY654"] = "2025-04-27", ["KEY987"] = "2025-04-27",
    ["ALPHA-TESTER"] = "2025-04-27", ["BETA-ACCESS"] = "2025-04-27",
    ["GOLD-MEMBER"] = "2025-04-27", ["SILVER-USER"] = "2025-04-27",
    ["BRONZE-PASS"] = "2025-04-27", ["RANDOM-KEY"] = "2025-04-27",
    ["ANOTHER-KEY"] = "2025-04-27", ["UNIQUE-CODE"] = "2025-04-27",
    ["SUPER-SECRET"] = "2025-04-27", ["VIP-ACCESS"] = "2025-04-27",
    ["PREMIUM-PASS"] = "2025-04-27", ["ULTIMATE-KEY"] = "2025-04-27",
    ["GUEST-KEY"] = "2025-04-27", ["TRIAL-KEY"] = "2025-04-27",
    ["LEVEL1-KEY"] = "2025-04-27", ["LEVEL2-KEY"] = "2025-04-27",
    ["LEVEL3-KEY"] = "2025-04-27", ["EVENT-KEY"] = "2025-04-27",
    ["SUMMER-KEY"] = "2025-04-27", ["WINTER-KEY"] = "2025-04-27",
    ["SPRING-KEY"] = "2025-04-27",
}

-- CONFIGURAÇÃO DE VERIFICAÇÃO POR DISPOSITIVO
local verificarDispositivo = true

-- TABELAS DE CONTROLE
local dispositivosSalvos = {}
local keysBloqueadas = {}

-- FUNÇÕES
local function getHWID()
    return game:GetService("RbxAnalyticsService"):GetClientId()
end

local function isValidKey(inputKey)
    local today = os.date("*t")
    local keyDate = keys[inputKey]
    if keyDate then
        local y, m, d = keyDate:match("(%d+)-(%d+)-(%d+)")
        local expTime = os.time({year = tonumber(y), month = tonumber(m), day = tonumber(d)})
        return os.time(today) <= expTime
    end
    return false
end

local function bloquearKey(key)
    keysBloqueadas[key] = true
end

local function isKeyProtegida(key)
    return key == "DONOsKeY" or key == "STAFFSkey"
end

-- UI
local player = game.Players.LocalPlayer
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "KeyInterface"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 320, 0, 170)
frame.Position = UDim2.new(0.5, -160, 0.5, -85)
frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)
Instance.new("UIStroke", frame).Color = Color3.fromRGB(80, 80, 80)

local textBox = Instance.new("TextBox", frame)
textBox.Size = UDim2.new(0.85, 0, 0, 40)
textBox.Position = UDim2.new(0.075, 0, 0.2, 0)
textBox.PlaceholderText = "Insira a Key"
textBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
textBox.TextColor3 = Color3.new(1, 1, 1)
textBox.Font = Enum.Font.Gotham
textBox.TextSize = 16
textBox.ClearTextOnFocus = false
Instance.new("UICorner", textBox).CornerRadius = UDim.new(0, 6)

local submitButton = Instance.new("TextButton", frame)
submitButton.Size = UDim2.new(0.85, 0, 0, 35)
submitButton.Position = UDim2.new(0.075, 0, 0.55, 0)
submitButton.Text = "Verificar"
submitButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
submitButton.TextColor3 = Color3.new(1, 1, 1)
submitButton.Font = Enum.Font.GothamBold
submitButton.TextSize = 16
Instance.new("UICorner", submitButton).CornerRadius = UDim.new(0, 6)

local message = Instance.new("TextLabel", frame)
message.Size = UDim2.new(1, 0, 0.2, 0)
message.Position = UDim2.new(0, 0, 0.8, 0)
message.BackgroundTransparency = 1
message.TextColor3 = Color3.new(1, 1, 1)
message.Text = ""
message.Font = Enum.Font.Gotham
message.TextSize = 14

-- VERIFICAÇÃO
submitButton.MouseButton1Click:Connect(function()
    local inputKey = textBox.Text
    local hwid = getHWID()

    if not isValidKey(inputKey) then
        message.Text = "Key inválida ou expirada."
        return
    end

    if keysBloqueadas[inputKey] then
        message.Text = "Essa key foi bloqueada por uso indevido."
        return
    end

    if verificarDispositivo and not isKeyProtegida(inputKey) then
        local dispositivoAnterior = dispositivosSalvos[inputKey]

        if dispositivoAnterior then
            if dispositivoAnterior ~= hwid then
                bloquearKey(inputKey)
                message.Text = "Key usada em outro dispositivo. Agora está bloqueada."
                return
            end
        else
            dispositivosSalvos[inputKey] = hwid
        end
    end

    message.Text = "Key válida. Carregando menu..."
    wait(1)
    gui:Destroy()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/tveiz/Hubmini/refs/heads/main/Version2"))()
end)
